{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red14\green0\blue0;\red247\green247\blue247;\red0\green116\blue0;
\red170\green13\blue145;\red92\green38\blue153;\red46\green13\blue110;\red196\green26\blue22;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww25400\viewh17600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b\fs36 \cf0 Projekt \'84Memories\'93 - ToDos
\b0\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0
\b \cf0 {\listtext	\uc0\u8259 	}\ul Offene Punkte
\b0 \ulnone \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 - Moment Details verbessern (statische Tabelle)\
- Moment l\'f6schen\
- Moment bearbeiten (eigene View oder Wiederverwendung von \'84neuen Moment erstellen\'93?\
- Entscheidung: L\'f6schen eines Moments -> Bild auch?\
- Erstellen des Core Data Contexts anpassen (eigene Fehlermeldung) in AppDelegate\
- Karte mit dem Moment anzeigen (wenn Location ermittelt werden konnte; beide F\'e4lle testen)\
- iCloud Sync (Core Data)\
- Contact ausw\'e4hlen: Contacts {\field{\*\fldinst{HYPERLINK "http://www.appcoda.com/ios-contacts-framework/"}}{\fldrslt http://www.appcoda.com/ios-contacts-framework/}}\
	deprecated: 
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
AddressBook ({\field{\*\fldinst{HYPERLINK "https://www.raywenderlich.com/97936/address-book-tutorial-swift-ios"}}{\fldrslt https://www.raywenderlich.com/97936/address-book-tutorial-swift-ios}})
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
- Bild aufnehmen bzw. ausw\'e4hlen und im Moment speichern (Link/Name?)\
- Foto aus Library anzeigen: Photos\
	deprecated: 
\f2\fs22 \CocoaLigature0 AssetsLibrary ({\field{\*\fldinst{HYPERLINK "https://www.raywenderlich.com/76285/beginning-core-image-swift"}}{\fldrslt https://www.raywenderlich.com/76285/beginning-core-image-swift}})\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \CocoaLigature1 - L\'e4ngere Ladezeit beim ersten Erstellen eines Moments
\f2\fs22 \CocoaLigature0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \CocoaLigature1 - Optional: eigenes Logo/Bild in Images einbinden\
- Optional: Refresh Control in Tabellen\
- Optional: Moment Details: Distanz von aktueller Position zum Moment anzeigen\
- Optional: Icons f\'fcr Wetterlage laden\
- Optional: Startseite / + evtl. Logo\
- Optional: Weitere Bibliotheken einbinden zum Ausprobieren\
\
\

\b \ul Fertig
\b0 \ulnone \
- Projekt Setup initial mit Alamofire und SwiftyJSON\
- View/Controller: Details eines Moments anzeigen\
- Core Data beispielhaft einbinden\
- Grundstruktur erstellen:\
	* View/Controller: Timelines anzeigen\
	* View/Controller: Timeline erstellen\
	* View/Controller: Moments anzeigen\
	* View/Controller: Moment erstellen\
- DAO f\'fcr Core Data Zugriff pro Modell\
- Wetter Service Aufruf (info.plist angepasst f\'fcr HTTP Zugriff)\
- Aktuelle Geoposition ermitteln (info.plist angepasst f\'fcr Zugriffserlaubnis)\
- Wetterinformation speichern im Moment\
- Moment Table Cell initial\
- Geo Location / Ort ermitteln und im Moment speichern: \'fcber 
\f2\fs22 \CocoaLigature0 GMSGeocoder? oder einfach \'fcber Wetter-API?\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 \ul \ulc0 Punkte zur Kl\'e4rung
\b0 \ulnone \
- Zugriff auf Kontakte und Photo -> Info.plist oder programmatisch l\'f6sen?\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs22 \cf0 \CocoaLigature0 \

\f3\b\fs24 \ul Gekl\'e4rte Punkte
\f2\b0\fs22 \ulnone \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \CocoaLigature1 - WebService Aufruf: Parameter \'84Magic Number\'93?\
	-> wenn nur an einer Stelle verwendet: okay. Ansonsten in Konstanten auslagern.\
\
- CoreData Objekt und einfache Objekte aus JSON verheiraten? Aufteilung von CoreData Entit\'e4ten und DTOs?\
	-> \'fcblicherweise w\'fcrde man eigene Objekte f\'fcr WebService-Resultate definieren und das Mapping auf die CoreData-Entit\'e4t bspw. im DAO durchf\'fchren.\
	-> auch denkbar: im DAO alle Parameter des Objekts an eine Funktion zum Erstellen des CoreData-Objekts \'fcbergeben.\
\
- Async: Wetter laden, Geocode, persistieren\'85\
	-> die Verkettung der asynchronen Aufrufe sind \'fcblich. Immer den Fehlerfall beachten und entsprechend reagieren.\
\
- Moment bearbeiten im eigenen MVC? (UITableView: isEditing -> statt textField ein Label usw.)\
	-> nein, das Bearbeiten wird \'fcblicherweise im selben MVC durchgef\'fchrt wie das Anlegen. Es kann gesteuert werden, welche UI Elemente readable sein sollen.\
\
- Pr\'e4sentation (Datum 13.07.?): Demo auf Beamer? Tool-Unterst\'fctzung?\
	-> 20 min, 13.07., Beamer ja, \'fcblicherweise wird der Simulator gezeigt. F\'fcr andere F\'e4lle selbst organisieren.\
\
- Was wird in der Ausarbeitung bzw. der Pr\'e4sentation erwartet?\
	-> Fazit: Lessons learned, Vergleich zur Spec, Code-Beispiele, Screenshots, \'84weiterf\'fchrende Spezifikation\'93\
\
- Interaktion zwischen Views: Moment erstellen und anschlie\'dfend den neuen Moment an die Tabelle (Controller) \'fcbergeben? Oder Core Data laden lassen?\
	-> NSFetchedResultsController anschauen\
	-> viewWillAppear in der Tabellen-View mit table.reload() ist okay.\
\
- Logging: Nur w\'e4hrend der Entwicklung sinnvoll? Wie ist die Kommunikation bei realen Anwendungen - > nur \'fcber ErrorCode?\
	NSLog: synchronized, Zeitstempel, langsamer {\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/25951195/swift-print-vs-println-vs-nslog"}}{\fldrslt http://stackoverflow.com/questions/25951195/swift-print-vs-println-vs-nslog}}\
	-> fr\'fcher wurde NSLog genutzt, heute eher einfache print() \
	-> spezielle Frameworks xxxx\
\
- Bild speichern f\'fcr einen Moment. Ablage in der Cloud? Zugriff per Url? Core Data w\'fcrde zu stark wachsen imho.\
	-> M\'f6glichkeit: sharedFolder (iCloud). Zuk\'fcnftig aber eher auf eigener L\'f6sung per WebService (REST) hochladen und den Link im Moment speichern.\
	-> f\'fcr die Ausarbeitung im Rahmen von SPP reicht es, sich die URL zur lokalen Image-Library im Moment zu speichern\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 \ul \ulc0 Code Schnipsel\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0 \cf0 \ulnone \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f2\fs22 \cf0 \CocoaLigature0     \cf4 // deprecated\
\cf0         \cf5 func\cf0  getUIImagefromAsseturl (url: \cf6 NSURL\cf0 ) \{\
            \cf5 let\cf0  asset = \cf6 ALAssetsLibrary\cf0 ()\
            asset.\cf7 assetForURL\cf0 (url, resultBlock: \{ asset \cf5 in\cf0 \
                \cf5 if\cf0  \cf5 let\cf0  ast = asset \{\
                    \cf5 let\cf0  assetRep = ast.\cf7 defaultRepresentation\cf0 ()\
                    \cf5 let\cf0  iref = assetRep.\cf7 fullResolutionImage\cf0 ().\cf7 takeUnretainedValue\cf0 ()\
                    \cf5 let\cf0  image = \cf6 UIImage\cf0 (CGImage: iref)\
                    \cf7 dispatch_async\cf0 (\cf7 dispatch_get_main_queue\cf0 (), \{\
                        \cf7 print\cf0 (\cf8 "loaded image by url: \cf0 \\\cf8 (\cf0 image\cf8 )"\cf0 )\
                    \})\
                \}\
                \}, failureBlock: \{ error \cf5 in\cf0 \
                    \cf7 print\cf0 (\cf8 "Error: \cf0 \\\cf8 (\cf0 error\cf8 )"\cf0 )\
            \})\
        \}
\f0\fs24 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	}